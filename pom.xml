<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>bmc.dev.templates.maven</groupId>
    <artifactId>bmc-parent</artifactId>
    <version>bmc-local</version>
    <packaging>pom</packaging>

    <name>BMC - Common Maven Parent POM</name>
    <description>
        BMC - BOM and Build System Parent for children BOMs. Can be used as a common build system for any framework. Children BOMs using this project
        as their parent can specify Quarkus, Micronaut, Spring, etc. dependencies and all align to build and quality standards using a framework
        "agnostic" common parent. This is the first and top parent for every project.
    </description>
    <url>https://www.bmc-anvil.com/</url>

    <!-- About Licenses:
         This section may / will change over time as the project grows / shrinks / changes in repositories, resources, assets, etc.
         Not every repository, resource, asset, etc. will use the same licensing approach.
         This means I will change the licensing at my own will over time at any time without notice.
         -
         The idea behind this project is to showcase, learn and share, but without losing control of my own creation.
         -
         Parts of the project anyone will be able to be incorporated on closed-source code without sharing your own code nor adopting a copy-left
         license. (Apache License v2 / other?)
         Other parts will be licenced so you can also use them at will but MUST still be FOSS, and you need to reshare your modifications and keep
         the code available. (LGPL v3 / other?)
         Licensing may / will change at any time, with no notice.
     -->
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
        <license>
            <name>GNU Lesser General Public License, Version 3.0</name>
            <url>https://www.gnu.de/documents/lgpl-3.0.en.html</url>
            <distribution>repo</distribution>
        </license>
        <license>
            <name>GNU General Public License, Version 2.0</name>
            <url>https://www.gnu.de/documents/gpl-2.0.en.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Johnny X</name>
            <organization>BareMetalCode</organization>
            <organizationUrl>https://www.baremetalcode.com/</organizationUrl>
        </developer>
        <developer>
            <name>BareMetalCode Devs</name>
            <organization>BareMetalCode</organization>
            <organizationUrl>https://www.baremetalcode.com/</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/${github.org}/${github.repository}.git</connection>
        <developerConnection>scm:git:ssh://github.com:${github.org}/${github.repository}.git</developerConnection>
        <url>${project.url}</url>
    </scm>

    <properties>
        <!-- Keep properties in alphabetical order  -->
        <!-- BMC Config and Versions -->
        <bmc-resources.groupId>bmc.dev.resources.code</bmc-resources.groupId>
        <bmc-resources.artifact>bmc-resources</bmc-resources.artifact>
        <bmc-resources.version>1.2.0</bmc-resources.version>

        <!-- Configuration  -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <skipITs>true</skipITs>

        <!-- GitHub Repositories -->
        <github.org>bmc-anvil</github.org>
        <github.packages.id>github</github.packages.id>
        <github.packages.name>GitHub Packages</github.packages.name>
        <github.packages.base-url>https://maven.pkg.github.com</github.packages.base-url>
        <github.repository>${project.groupId}.${project.artifactId}</github.repository>

        <!-- Java / Maven Configuration  -->
        <maven.compiler.parameters>true</maven.compiler.parameters>
        <maven.compiler.release>24</maven.compiler.release>
        <maven.compiler.proc>full</maven.compiler.proc>
        <maven.min.version>3.9.9</maven.min.version>

        <!-- Plugins Versions  -->
        <checkstyle-plugin.version>3.6.0</checkstyle-plugin.version>
        <compiler-plugin.version>3.14.0</compiler-plugin.version>
        <dependency-plugin.version>3.8.1</dependency-plugin.version>
        <deploy-plugin.version>3.1.4</deploy-plugin.version>
        <enforcer-plugin.version>3.6.1</enforcer-plugin.version>
        <failsafe-plugin.version>3.5.3</failsafe-plugin.version>
        <jar-plugin.version>3.4.2</jar-plugin.version>
        <javadoc-plugin.version>3.11.2</javadoc-plugin.version>
        <resources-plugin.version>3.3.1</resources-plugin.version>
        <source-plugin.version>3.3.1</source-plugin.version>
        <surefire-plugin.version>${failsafe-plugin.version}</surefire-plugin.version>

        <!-- Versions -->
        <checkstyle.version>11.0.0</checkstyle.version>
    </properties>

    <!--
        DependencyManagement section is the dependencies' alignment for this project's children and aren't necessarily automatically
        imported on the children's poms.
    -->
    <dependencyManagement>
        <!--
            This project being the top parent and the most common must also be the most general.
            Do not add dependencies here unless every child-bom must use it for some unsurmountable alignment.
        -->
    </dependencyManagement>

    <!--
        The dependencies section is the dependencies' inheritance for this project's children.
        The dependencies in this section are automatically imported on the children's poms and will be shared by all inheritors.
        They are used across all projects, don't include one-off requirements.
    -->
    <dependencies>
        <!--
            This project being the top parent and the most common must also be the most general.
            Do not add dependencies here unless every child-bom must use it for some unsurmountable alignment.
        -->
    </dependencies>

    <build>
        <!--
            Build pluginManagement section is the build plugins' alignment for this project's children.
            They aren't necessarily imported nor executed on the children's poms
        -->
        <pluginManagement>
            <plugins>
                <!-- Apache Maven build Plugins -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${checkstyle-plugin.version}</version>
                    <dependencies>
                        <!-- use latest checkstyle version-->
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <configLocation>${project.basedir}/checkstyle.xml</configLocation>
                        <outputFile>${project.build.directory}/checkstyle-result.sarif</outputFile>
                        <outputFileFormat>sarif</outputFileFormat>
                        <excludeGeneratedSources>true</excludeGeneratedSources>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <inputEncoding>UTF-8</inputEncoding>
                        <outputEncoding>UTF-8</outputEncoding>
                        <consoleOutput>true</consoleOutput>
                        <linkXRef>false</linkXRef>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${compiler-plugin.version}</version>
                    <!--
                        Java >=23 requires explicit configuration of annotation processing.
                        Add the proper configuration to children of this parent POM.
                        I.e., the BMC Quarkus framework's parent POM.
                    -->
                    <configuration/>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${dependency-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>unpack</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>${bmc-resources.groupId}</groupId>
                                        <artifactId>${bmc-resources.artifact}</artifactId>
                                        <version>${bmc-resources.version}</version>
                                        <outputDirectory>${project.build.directory}/bmc-resources-unpack</outputDirectory>
                                        <includes>.editorconfig,.gitignore,.dockerignore,checkstyle.xml,LICENSE,mvnw,.github/**,.mvn/**</includes>
                                    </artifactItem>
                                </artifactItems>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${deploy-plugin.version}</version>
                    <configuration>
                        <deployAtEnd>true</deployAtEnd>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireJavaVendor>
                                        <!-- java -XshowSettings:properties -version 2>&1 | grep vendor -->
                                        <message>To build this project one of the JDK in the "includes" list has to be used</message>
                                        <includes>
                                            <!-- commercial vendors to include: DO NOT include any commercial vendors -->
                                            <!-- open-source vendors to include -->
                                            <include>OpenJDK</include>
                                            <include>openjdk</include>
                                            <include>GraalVM</include>
                                            <!-- need to include Oracle as an OSS vendor given they provide a GNU GPL build of the JDK  -->
                                            <include>Oracle Corporation</include>
                                            <!-- workaround for missing java.vendor property in some OpenJDK builds-->
                                            <include>N/A</include>
                                        </includes>
                                    </requireJavaVendor>
                                    <requireJavaVersion>
                                        <message>To build this project JDK >=${maven.compiler.release} is required. Please install it.</message>
                                        <version>${maven.compiler.release}</version>
                                    </requireJavaVersion>
                                    <requireMavenVersion>
                                        <message>To build this project Maven >=${maven.min.version} is required. Please install it.</message>
                                        <version>${maven.min.version}</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${failsafe-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <systemPropertyVariables>
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            <maven.home>${maven.home}</maven.home>
                            <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${javadoc-plugin.version}</version>
                    <configuration>
                        <release>${maven.compiler.release}</release>
                        <doclint>none</doclint>
                        <additionalJOptions>
                            <additionalJOption>-Xdoclint:none</additionalJOption>
                        </additionalJOptions>
                        <failOnError>false</failOnError>
                        <skip>false</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <phase>package</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire-plugin.version}</version>
                    <configuration>
                        <systemPropertyVariables>
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                            <maven.home>${maven.home}</maven.home>
                        </systemPropertyVariables>
                        <argLine>--add-opens java.base/java.lang=ALL-UNNAMED</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${resources-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>bmc-resources-without-overwrite</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.basedir}</outputDirectory>
                                <overwrite>false</overwrite>
                                <resources>
                                    <resource>
                                        <directory>${project.build.directory}/bmc-resources-unpack</directory>
                                        <includes>
                                            <include>LICENSE</include>
                                            <include>.dockerignore</include>
                                            <include>.github/**</include>
                                            <include>.mvn/*</include>
                                        </includes>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>bmc-resources-with-overwrite</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.basedir}</outputDirectory>
                                <overwrite>true</overwrite>
                                <resources>
                                    <resource>
                                        <directory>${project.build.directory}/bmc-resources-unpack</directory>
                                        <includes>
                                            <include>.editorconfig</include>
                                            <include>.gitignore</include>
                                            <include>checkstyle.xml</include>
                                            <include>.mvn/wrapper/*</include>
                                            <include>mvnw</include>
                                        </includes>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                            <phase>package</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <attach>true</attach>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <!--
            Build plugins' section is the build plugins' inheritance for this project's children.
            The plugins in this section are automatically imported and executed on the inheritors.
            They are used across all projects, don't include one-off requirements.
        -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- This profile is executed to deploy "libraries" or "modules" with corresponding documentation and sources to a given repository. -->
        <!-- As not every project is a library, this configuration needs not be part of the general configuration. -->
        <profile>
            <id>deployable-jar</id>
            <activation>
                <property>
                    <name>deployable-jar</name>
                </property>
            </activation>
            <properties>
                <maven.source.skip>false</maven.source.skip>
                <maven.javadoc.skip>false</maven.javadoc.skip>
            </properties>
            <distributionManagement>
                <repository>
                    <id>${github.packages.id}</id>
                    <name>${github.packages.name}</name>
                    <url>${github.packages.base-url}/${github.org}/${github.repository}</url>
                </repository>
            </distributionManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
